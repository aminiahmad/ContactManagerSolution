// <auto-generated />
using System;
using Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ContactManager.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240525120634_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.Country", b =>
                {
                    b.Property<Guid>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryId");

                    b.ToTable("Countries", (string)null);

                    b.HasData(
                        new
                        {
                            CountryId = new Guid("5abd89bb-3453-4149-bd2f-67a1a1f7b468"),
                            CountryName = "Iran"
                        },
                        new
                        {
                            CountryId = new Guid("a1cbb2ec-8ce3-427b-861c-04d436e78058"),
                            CountryName = "Japan"
                        },
                        new
                        {
                            CountryId = new Guid("0b9e7df1-5933-4ae5-8f7f-6cd0d56a0d89"),
                            CountryName = "Usa"
                        });
                });

            modelBuilder.Entity("Entities.Person", b =>
                {
                    b.Property<Guid?>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid?>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("PersonName")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<bool>("ReceiveNewsLetters")
                        .HasColumnType("bit");

                    b.Property<string>("Tin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(8)")
                        .HasDefaultValue("ABC4576")
                        .HasColumnName("TaxIdentificationNumber");

                    b.HasKey("PersonId");

                    b.HasIndex("CountryId");

                    b.ToTable("Persons", null, t =>
                        {
                            t.HasCheckConstraint("CHK_TIN", "len([TaxIdentificationNumber])=7");
                        });

                    b.HasData(
                        new
                        {
                            PersonId = new Guid("a42b03a8-35cd-4cf2-841d-f8445eb91475"),
                            Address = "wadawfgsrgsfef",
                            CountryId = new Guid("5abd89bb-3453-4149-bd2f-67a1a1f7b468"),
                            DateOfBirth = new DateTime(1990, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "awdaw@gmail.com",
                            Gender = "Male",
                            PersonName = "reza",
                            ReceiveNewsLetters = true
                        },
                        new
                        {
                            PersonId = new Guid("69e6d235-6a3f-4bba-89be-fc82e7c5816a"),
                            Address = "wa157wdfwa",
                            CountryId = new Guid("a1cbb2ec-8ce3-427b-861c-04d436e78058"),
                            DateOfBirth = new DateTime(1995, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "awdaw12@gmail.com",
                            Gender = "Female",
                            PersonName = "sara",
                            ReceiveNewsLetters = false
                        },
                        new
                        {
                            PersonId = new Guid("7c57cdb1-1ad0-41c9-88c4-4261787bd24b"),
                            Address = "wadawfgsrgsfef",
                            CountryId = new Guid("0b9e7df1-5933-4ae5-8f7f-6cd0d56a0d89"),
                            DateOfBirth = new DateTime(1990, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "awdwadfgeaw@gmail.com",
                            Gender = "Male",
                            PersonName = "ahmad",
                            ReceiveNewsLetters = true
                        });
                });

            modelBuilder.Entity("Entities.Person", b =>
                {
                    b.HasOne("Entities.Country", "Country")
                        .WithMany("Persons")
                        .HasForeignKey("CountryId");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Entities.Country", b =>
                {
                    b.Navigation("Persons");
                });
#pragma warning restore 612, 618
        }
    }
}
